<?xml version="1.0" encoding="utf-8"?>

<!-- vim: set ts=4 sw=4 sts=4 et fdm=marker :

     Sorry, I prefer vim as my editor.
     For one thing, it knows how to fold!
     That's why you see curly brackets in this file.
     Ugly, unless you use vim. :P

-->
<!-- Copyright notice {{{
 /*
 ** Copyright 2014, The CyanogenMod Project
 **
 ** Licensed under the Apache License, Version 2.0 (the "License");
 ** you may not use this file except in compliance with the License.
 ** You may obtain a copy of the License at
 **
 **     http://www.apache.org/licenses/LICENSE-2.0
 **
 ** Unless required by applicable law or agreed to in writing, software
 ** distributed under the License is distributed on an "AS IS" BASIS,
 ** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ** See the License for the specific language governing permissions and
 ** limitations under the License.
 */
 }}} -->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- {{{ Base UI -->

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- Disable lockscreen translucent decor by default -->
    <bool name="config_enableLockScreenTranslucentDecor">true</bool>

    <!-- Base "touch slop" value used by ViewConfiguration as a
         movement threshold where scrolling should begin. -->
    <dimen name="config_viewConfigurationTouchSlop">4dp</dimen>

    <!-- End of base UI }}} -->

    <!-- {{{ Radio -->

    <!-- Set to true to add links to Cell Broadcast app from Settings and MMS app. -->
    <bool name="config_cellBroadcastAppLinks">true</bool>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- /Radio }}} -->

    <!-- {{{ Networking -->

    <!-- Boolean indicating if restoring network selection should be skipped -->
    <!-- The restoring is handled by modem if it is true -->
    <bool translatable="false" name="skip_restoring_network_selection">true</bool>

    <!-- /Networking }}} -->

    <!-- {{{ Animations -->

    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">false</bool>

    <!-- End of animations }}} -->

    <!-- {{{ Brightness -->

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         {{{
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.
         }}}
         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>4</item>
        <item>11</item>
        <item>41</item>
        <item>91</item>
        <item>161</item>
        <item>226</item>
        <item>321</item>
        <item>641</item>
        <item>1281</item>
        <item>2601</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>10</item>
        <item>30</item>
        <item>39</item>
        <item>64</item>
        <item>64</item>
        <item>90</item>
        <item>116</item>
        <item>142</item>
        <item>170</item>
        <item>199</item>
        <item>227</item>
        <item>255</item>
    </integer-array>

    <!-- Minimum allowable screen brightness to use in a very dark room.
         This value sets the floor for the darkest possible auto-brightness
         adjustment.  It is expected to be somewhat less than the first entry in
         config_autoBrightnessLcdBacklightValues so as to allow the user to have
         some range of adjustment to dim the screen further than usual in very
         dark rooms. The contents of the screen must still be clearly visible
         in darkness (although they may not be visible in a bright room). -->
    <integer name="config_screenBrightnessDark">1</integer>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">1</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Flag indicating whether we should enable the automatic brightness in Settings.
         config_hardware_automatic_brightness_available is not set, so we will use software implementation -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- /Brightness }}} -->

    <!-- {{{ Buttons -->
    <!-- Hardware 'face' keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume keys
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnHomeBehavior">3</integer>

    <!-- Control the behavior when the user long presses the menu button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_longPressOnMenuBehavior">2</integer>

    <!-- Control the behavior when the user double-taps the home button.
            0 - Nothing
            1 - Menu
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
         This needs to match the constants in
         policy/src/com/android/internal/policy/impl/PhoneWindowManager.java
    -->
    <integer name="config_doubleTapOnHomeBehavior">0</integer>

    <!-- /Buttons }}} -->

    <!-- {{{ Light sensors -->

    <!-- ======================================================================
         !! ATTENTION !!
         All the lights related stuff is now disabled
         because we have a different lights implementation for the htc_m8qlul
         aka the HTC One M8s
         Maybe this will be re-enabled later. DUNNO YET!
         ====================================================================== -->
    <!-- Default color for notification LED is green. -->
    <!-- color name="config_defaultNotificationColor">#ff00ff00</color -->

    <!-- Default LED on time for notification LED in milliseconds. -->
    <!-- integer name="config_defaultNotificationLedOn">1000</integer -->

    <!-- Default LED off time for notification LED in milliseconds. -->
    <!-- integer name="config_defaultNotificationLedOff">9000</integer -->

    <!-- Default value for led color when battery is low on charge -->
    <!-- integer name="config_notificationsBatteryLowARGB">0x00FF0000</integer -->

    <!-- Default value for led color when battery is medium charged -->
    <!-- integer name="config_notificationsBatteryMediumARGB">0x000000FF</integer -->

    <!-- Default value for led color when battery is fully charged -->
    <!-- integer name="config_notificationsBatteryFullARGB">0x0000FF00</integer -->

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <!-- bool name="config_intrusiveBatteryLed">true</bool -->

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <!-- bool name="config_intrusiveNotificationLed">true</bool -->

    <!-- Does the notification LED support multiple colors?
         Used to decide if the user can change the colors -->
    <!-- bool name="config_multiColorNotificationLed">true</bool -->

    <!-- /Light sensors }}} -->

    <!-- {{{ Wifi -->

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <!-- Wifi driver supports batched scan -->
    <bool translatable="false" name="config_wifi_batched_scan_supported">true</bool>

    <!-- /Wifi }}} -->

    <!-- {{{ Shutdown -->

    <!-- Defines the shutdown options shown in the reboot dialog. -->
        <array name="shutdown_reboot_options" translatable="false">
        <item>@string/reboot_reboot</item>
        <item>@string/reboot_soft</item>
        <item>@string/reboot_recovery</item>
        <item>@string/reboot_download</item>
    </array>

    <!-- Do not translate. Defines the shutdown actions passed to the kernel.
         The first item should be empty for regular reboot. -->
        <string-array name="shutdown_reboot_actions" translatable="false">
        <item></item>
        <item>soft_reboot</item>
        <item>recovery</item>
        <item>download</item>
    </string-array>

    <!-- /Shutdown }}} -->

    <!-- {{{ Tether -->

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tething over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>"usb\\d"</item>
        <item>"rndis\\d"</item>
        <item>ncm\\d</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
        <item>"softap.*"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
           <item>"bt-pan"</item>
    </string-array>

    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
         [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>4</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- /Tether }}} -->

        <!-- {{{ Sensors -->

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- /Sensors }}} -->

    <!-- {{{ TCP -->
    <!-- Configure wifi tcp buffersizes in the form:
         rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max -->
    <string name="config_wifi_tcp_buffers" translatable="false">524288,1048576,2097152,262144,524288,1048576</string>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array name="config_mobile_tcp_buffers">
        <item>lte:524288,1048576,5120000,262144,524288,1220608</item>
        <item>hspap:4096,174760,1572864,4096,16384,1220608</item>
        <item>hspa:4096,174760,1572864,4096,16384,1220608</item>
        <item>hsupa:4096,174760,1572864,4096,16384,1220608</item>
        <item>hsdpa:4096,174760,1572864,4096,16384,1220608</item>
        <item>umts:4096,174760,1572864,4096,16384,110208</item>
        <item>edge:4093,26280,35040,4096,16384,35040</item>
        <item>gprs:4092,8760,11680,4096,8760,11680</item>
        <item>evdo_b:4094,87380,262144,4096,16384,262144</item>
    </string-array>

    <!-- /TCP }}} -->

    <!-- {{{ Vibrator -->

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>20</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>20</item>
        <item>8</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>20</item>
    </integer-array>

    <!-- /Vibrator }}} -->

    <!-- {{{ Networking -->

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,60000,true</item>
        <item>mobile_supl,3,0,2,60000,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>bluetooth,7,7,1,-1,true</item>
        <item>mobile_fota,10,0,2,60000,true</item>
        <item>mobile_ims,11,0,2,60000,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>mobile_ia,14,0,2,-1,true</item>
        <item>mobile_emergency,15,0,2,-1,true</item>
        <item>usbnet,51,51,6,-1,true</item>
        <item>mobile_httpproxy,52,0,2,60000,true</item>
        <item>mobile_internet,53,0,2,60000,true</item>
        <item>mobile_vapp,54,0,2,1800000,true</item>
        <item>mobile_caller_name_id,55,0,2,1800000,true</item>
        <item>mobile_v800,56,0,2,60000,true</item>
    </string-array>

    <!-- /Networking }}} -->

    <!-- {{{ Performance -->

    <!-- Performance profiles -->
    <string name="config_perf_profile_prop">powerhal</string>
    <string name="config_perf_profile_default_entry">1</string>

    <!-- /Performance }}} -->

    <!-- {{{ Hotplug -->

    <!-- SD card is hot-pluggable on this device -->
    <bool name="config_batterySdCardAccessibility">true</bool>

    <!-- Is the device capable of hot swapping an UICC card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- /Hotplug }}} -->

</resources>
